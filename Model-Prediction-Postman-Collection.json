{
  "info": {
    "name": "ML Model Prediction API",
    "description": "Test collection for ML model prediction endpoint with authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "",
      "type": "string"
    },
    {
      "key": "model_id",
      "value": "335358cb-1193-4300-baa3-6b29254e2421",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('auth_token', response.token);",
                  "        console.log('Token saved:', response.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test-{{$timestamp}}@example.com\",\n  \"password\": \"TestPassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user and automatically save the auth token"
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('auth_token', response.token);",
                  "        console.log('Token saved:', response.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with existing user credentials"
          }
        },
        {
          "name": "Create API Key",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.key) {",
                  "        pm.collectionVariables.set('api_key', response.key);",
                  "        console.log('API Key saved:', response.key);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman Test Key\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/keys",
              "host": ["{{base_url}}"],
              "path": ["api", "keys"]
            },
            "description": "Create an API key for alternative authentication"
          }
        }
      ]
    },
    {
      "name": "Model Prediction",
      "item": [
        {
          "name": "Predict with Bearer Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bedrooms\": 3,\n  \"bathrooms\": 2,\n  \"sqft\": 1500,\n  \"age\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/predict/{{model_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "{{model_id}}"]
            },
            "description": "Test model prediction using Bearer token authentication"
          }
        },
        {
          "name": "Predict with API Key",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bedrooms\": 4,\n  \"bathrooms\": 3,\n  \"sqft\": 2000,\n  \"age\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/predict/{{model_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "{{model_id}}"]
            },
            "description": "Test model prediction using API key authentication"
          }
        },
        {
          "name": "Predict - Small House",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bedrooms\": 2,\n  \"bathrooms\": 1,\n  \"sqft\": 800,\n  \"age\": 15\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/predict/{{model_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "{{model_id}}"]
            },
            "description": "Test prediction for a small house"
          }
        },
        {
          "name": "Predict - Luxury House",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bedrooms\": 5,\n  \"bathrooms\": 4,\n  \"sqft\": 3500,\n  \"age\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/predict/{{model_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "{{model_id}}"]
            },
            "description": "Test prediction for a luxury house"
          }
        },
        {
          "name": "Get Model Schema",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/predict/{{model_id}}/schema",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "{{model_id}}", "schema"]
            },
            "description": "Get the input schema for the model"
          }
        }
      ]
    },
    {
      "name": "Model Management",
      "item": [
        {
          "name": "List Models",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/models",
              "host": ["{{base_url}}"],
              "path": ["api", "models"]
            },
            "description": "Get list of all models"
          }
        },
        {
          "name": "Get Model Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/models/{{model_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "models", "{{model_id}}"]
            },
            "description": "Get details of a specific model"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Server Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check if the server is running"
          }
        }
      ]
    }
  ]
}